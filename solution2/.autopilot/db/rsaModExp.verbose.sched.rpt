

================================================================
== Vivado HLS Report for 'rsaModExp'
================================================================
* Date:           Thu Jul 13 08:01:29 2017

* Version:        2016.4 (Build 1756540 on Mon Jan 23 19:31:01 MST 2017)
* Project:        ws_rsa
* Solution:       solution2
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  25.00|     21.97|        3.12|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +----------+----------+----------+----------+---------+
    |       Latency       |       Interval      | Pipeline|
    |    min   |    max   |    min   |    max   |   Type  |
    +----------+----------+----------+----------+---------+
    |  33636389|  67201061|  33636390|  67201062|   none  |
    +----------+----------+----------+----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+----------+----------+---------------+-----------+-----------+------+----------+
        |          |       Latency       |   Iteration   |  Initiation Interval  | Trip |          |
        | Loop Name|    min   |    max   |    Latency    |  achieved |   target  | Count| Pipelined|
        +----------+----------+----------+---------------+-----------+-----------+------+----------+
        |- Loop 1  |  33570816|  67135488| 16392 ~ 32781 |          -|          -|  2048|    no    |
        +----------+----------+----------+---------------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 7
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / (!tmp)
	7  / (tmp)
5 --> 
	6  / true
6 --> 
	4  / true
7 --> 
* FSM state operations: 

 <State 1>: 2.57ns
ST_1: xbar_V_1 (5)  [1/1] 0.00ns
:0  %xbar_V_1 = alloca i2048

ST_1: n_V_read (11)  [1/1] 1.00ns
:6  %n_V_read = call i2048 @_ssdm_op_Read.s_axilite.i2048(i2048 %n_V)

ST_1: e_V_read (12)  [1/1] 1.00ns
:7  %e_V_read = call i2048 @_ssdm_op_Read.s_axilite.i2048(i2048 %e_V)

ST_1: M_V_read (13)  [1/1] 1.00ns
:8  %M_V_read = call i2048 @_ssdm_op_Read.s_axilite.i2048(i2048 %M_V)

ST_1: Mbar_V (22)  [2/2] 1.57ns  loc: ws_rsa/solution1/rsaModExp.cpp:16
:17  %Mbar_V = call fastcc i2048 @interleaveModMult(i2048 %M_V_read, i2048 %n_V_read)


 <State 2>: 1.57ns
ST_2: Mbar_V (22)  [1/2] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:16
:17  %Mbar_V = call fastcc i2048 @interleaveModMult(i2048 %M_V_read, i2048 %n_V_read)

ST_2: xbar_V (23)  [2/2] 1.57ns  loc: ws_rsa/solution1/rsaModExp.cpp:19
:18  %xbar_V = call fastcc i2048 @interleaveModMult(i2048 1, i2048 %n_V_read)


 <State 3>: 1.57ns
ST_3: StgValue_15 (6)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i2048 %M_V), !map !80

ST_3: StgValue_16 (7)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i2048 %e_V), !map !86

ST_3: StgValue_17 (8)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i2048 %n_V), !map !90

ST_3: StgValue_18 (9)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i2048* %out_V), !map !94

ST_3: StgValue_19 (10)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @rsaModExp_str) nounwind

ST_3: StgValue_20 (14)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:5
:9  call void (...)* @_ssdm_op_SpecInterface(i2048* %out_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_3: StgValue_21 (15)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:5
:10  call void (...)* @_ssdm_op_SpecInterface(i2048 %n_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_3: StgValue_22 (16)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:5
:11  call void (...)* @_ssdm_op_SpecInterface(i2048 %e_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_3: StgValue_23 (17)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:5
:12  call void (...)* @_ssdm_op_SpecInterface(i2048 %M_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_3: StgValue_24 (18)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:5
:13  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_3: StgValue_25 (19)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:5
:14  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_3: StgValue_26 (20)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:5
:15  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [18 x i8]* @p_str2, [1 x i8]* @p_str1) nounwind

ST_3: StgValue_27 (21)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:5
:16  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [9 x i8]* @p_str3, [1 x i8]* @p_str1) nounwind

ST_3: xbar_V (23)  [1/2] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:19
:18  %xbar_V = call fastcc i2048 @interleaveModMult(i2048 1, i2048 %n_V_read)

ST_3: StgValue_29 (24)  [1/1] 1.57ns  loc: ws_rsa/solution1/rsaModExp.cpp:19
:19  store i2048 %xbar_V, i2048* %xbar_V_1

ST_3: StgValue_30 (25)  [1/1] 1.57ns  loc: ws_rsa/solution1/rsaModExp.cpp:23
:20  br label %1


 <State 4>: 1.57ns
ST_4: i_assign (27)  [1/1] 0.00ns
:0  %i_assign = phi i12 [ 2047, %0 ], [ %i, %._crit_edge ]

ST_4: i_assign_cast (28)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:23
:1  %i_assign_cast = sext i12 %i_assign to i32

ST_4: tmp (29)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:23
:2  %tmp = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %i_assign, i32 11)

ST_4: empty (30)  [1/1] 0.00ns
:3  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2048, i64 2048, i64 2048)

ST_4: StgValue_35 (31)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:23
:4  br i1 %tmp, label %4, label %2

ST_4: xbar_V_1_load_1 (33)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:25
:0  %xbar_V_1_load_1 = load i2048* %xbar_V_1

ST_4: xbar_V_2 (34)  [2/2] 1.57ns  loc: ws_rsa/solution1/rsaModExp.cpp:25
:1  %xbar_V_2 = call fastcc i2048 @montMult(i2048 %xbar_V_1_load_1, i2048 %xbar_V_1_load_1, i2048 %n_V_read)

ST_4: tmp_1 (35)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:26
:2  %tmp_1 = call i1 @_ssdm_op_BitSelect.i1.i2048.i32(i2048 %e_V_read, i32 %i_assign_cast)

ST_4: xbar_V_1_load (48)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:30
:0  %xbar_V_1_load = load i2048* %xbar_V_1

ST_4: call_ret (49)  [2/2] 1.57ns  loc: ws_rsa/solution1/rsaModExp.cpp:30
:1  %call_ret = call fastcc i2048 @montMult(i2048 %xbar_V_1_load, i2048 1, i2048 %n_V_read)


 <State 5>: 19.83ns
ST_5: xbar_V_2 (34)  [1/2] 18.26ns  loc: ws_rsa/solution1/rsaModExp.cpp:25
:1  %xbar_V_2 = call fastcc i2048 @montMult(i2048 %xbar_V_1_load_1, i2048 %xbar_V_1_load_1, i2048 %n_V_read)

ST_5: StgValue_42 (36)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:26
:3  br i1 %tmp_1, label %3, label %._crit_edge.pre

ST_5: StgValue_43 (38)  [1/1] 1.57ns  loc: ws_rsa/solution1/rsaModExp.cpp:25
._crit_edge.pre:0  store i2048 %xbar_V_2, i2048* %xbar_V_1

ST_5: StgValue_44 (39)  [1/1] 0.00ns
._crit_edge.pre:1  br label %._crit_edge

ST_5: xbar_V_3 (41)  [2/2] 1.57ns  loc: ws_rsa/solution1/rsaModExp.cpp:27
:0  %xbar_V_3 = call fastcc i2048 @montMult(i2048 %Mbar_V, i2048 %xbar_V_2, i2048 %n_V_read)


 <State 6>: 19.83ns
ST_6: xbar_V_3 (41)  [1/2] 18.26ns  loc: ws_rsa/solution1/rsaModExp.cpp:27
:0  %xbar_V_3 = call fastcc i2048 @montMult(i2048 %Mbar_V, i2048 %xbar_V_2, i2048 %n_V_read)

ST_6: StgValue_47 (42)  [1/1] 1.57ns  loc: ws_rsa/solution1/rsaModExp.cpp:27
:1  store i2048 %xbar_V_3, i2048* %xbar_V_1

ST_6: StgValue_48 (43)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:27
:2  br label %._crit_edge

ST_6: i (45)  [1/1] 1.84ns  loc: ws_rsa/solution1/rsaModExp.cpp:23
._crit_edge:0  %i = add i12 %i_assign, -1

ST_6: StgValue_50 (46)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:23
._crit_edge:1  br label %1


 <State 7>: 19.26ns
ST_7: call_ret (49)  [1/2] 18.26ns  loc: ws_rsa/solution1/rsaModExp.cpp:30
:1  %call_ret = call fastcc i2048 @montMult(i2048 %xbar_V_1_load, i2048 1, i2048 %n_V_read)

ST_7: StgValue_52 (50)  [1/1] 1.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:30
:2  call void @_ssdm_op_Write.s_axilite.i2048P(i2048* %out_V, i2048 %call_ret)

ST_7: StgValue_53 (51)  [1/1] 0.00ns  loc: ws_rsa/solution1/rsaModExp.cpp:31
:3  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 25ns, clock uncertainty: 3.12ns.

 <State 1>: 2.57ns
The critical path consists of the following:
	s_axi read on port 'n_V' [11]  (1 ns)
	'call' operation ('Mbar.V', ws_rsa/solution1/rsaModExp.cpp:16) to 'interleaveModMult' [22]  (1.57 ns)

 <State 2>: 1.57ns
The critical path consists of the following:
	'call' operation ('xbar.V', ws_rsa/solution1/rsaModExp.cpp:19) to 'interleaveModMult' [23]  (1.57 ns)

 <State 3>: 1.57ns
The critical path consists of the following:
	'call' operation ('xbar.V', ws_rsa/solution1/rsaModExp.cpp:19) to 'interleaveModMult' [23]  (0 ns)
	'store' operation (ws_rsa/solution1/rsaModExp.cpp:19) of variable 'xbar.V', ws_rsa/solution1/rsaModExp.cpp:19 on local variable 'xbar.V' [24]  (1.57 ns)

 <State 4>: 1.57ns
The critical path consists of the following:
	'load' operation ('xbar_V_1_load_1', ws_rsa/solution1/rsaModExp.cpp:25) on local variable 'xbar.V' [33]  (0 ns)
	'call' operation ('xbar.V', ws_rsa/solution1/rsaModExp.cpp:25) to 'montMult' [34]  (1.57 ns)

 <State 5>: 19.8ns
The critical path consists of the following:
	'call' operation ('xbar.V', ws_rsa/solution1/rsaModExp.cpp:25) to 'montMult' [34]  (18.3 ns)
	'store' operation (ws_rsa/solution1/rsaModExp.cpp:25) of variable 'xbar.V', ws_rsa/solution1/rsaModExp.cpp:25 on local variable 'xbar.V' [38]  (1.57 ns)

 <State 6>: 19.8ns
The critical path consists of the following:
	'call' operation ('xbar.V', ws_rsa/solution1/rsaModExp.cpp:27) to 'montMult' [41]  (18.3 ns)
	'store' operation (ws_rsa/solution1/rsaModExp.cpp:27) of variable 'xbar.V', ws_rsa/solution1/rsaModExp.cpp:27 on local variable 'xbar.V' [42]  (1.57 ns)

 <State 7>: 19.3ns
The critical path consists of the following:
	'call' operation ('call_ret', ws_rsa/solution1/rsaModExp.cpp:30) to 'montMult' [49]  (18.3 ns)
	s_axi write on port 'out_V' (ws_rsa/solution1/rsaModExp.cpp:30) [50]  (1 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
