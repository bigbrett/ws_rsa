// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "rsaModExp.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic rsaModExp::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic rsaModExp::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<25> rsaModExp::ap_ST_fsm_state1 = "1";
const sc_lv<25> rsaModExp::ap_ST_fsm_state2 = "10";
const sc_lv<25> rsaModExp::ap_ST_fsm_state3 = "100";
const sc_lv<25> rsaModExp::ap_ST_fsm_state4 = "1000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state5 = "10000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state6 = "100000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state7 = "1000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state8 = "10000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state9 = "100000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state10 = "1000000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state11 = "10000000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state12 = "100000000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<25> rsaModExp::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<32> rsaModExp::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> rsaModExp::ap_const_lv1_1 = "1";
const sc_lv<32> rsaModExp::ap_const_lv32_15 = "10101";
const sc_lv<1> rsaModExp::ap_const_lv1_0 = "0";
const sc_lv<32> rsaModExp::ap_const_lv32_1 = "1";
const sc_lv<32> rsaModExp::ap_const_lv32_4 = "100";
const sc_lv<32> rsaModExp::ap_const_lv32_7 = "111";
const sc_lv<32> rsaModExp::ap_const_lv32_8 = "1000";
const sc_lv<32> rsaModExp::ap_const_lv32_9 = "1001";
const sc_lv<32> rsaModExp::ap_const_lv32_C = "1100";
const sc_lv<32> rsaModExp::ap_const_lv32_D = "1101";
const sc_lv<32> rsaModExp::ap_const_lv32_F = "1111";
const sc_lv<32> rsaModExp::ap_const_lv32_10 = "10000";
const sc_lv<32> rsaModExp::ap_const_lv32_13 = "10011";
const sc_lv<32> rsaModExp::ap_const_lv32_14 = "10100";
const sc_lv<32> rsaModExp::ap_const_lv32_16 = "10110";
const sc_lv<32> rsaModExp::ap_const_lv32_17 = "10111";
const sc_lv<2052> rsaModExp::ap_const_lv2052_lc
const sc_lv<13> rsaModExp::ap_const_lv13_800 = "100000000000";
const sc_lv<12> rsaModExp::ap_const_lv12_7FF = "11111111111";
const sc_lv<32> rsaModExp::ap_const_lv32_18 = "11000";
const sc_lv<2048> rsaModExp::ap_const_lv2048_lc_2 = "1";
const sc_lv<2052> rsaModExp::ap_const_lv2052_lc_2 = "1";
const sc_lv<2049> rsaModExp::ap_const_lv2049_lc
const sc_lv<13> rsaModExp::ap_const_lv13_1FFF = "1111111111111";
const sc_lv<32> rsaModExp::ap_const_lv32_5 = "101";
const sc_lv<32> rsaModExp::ap_const_lv32_11 = "10001";
const sc_lv<32> rsaModExp::ap_const_lv32_B = "1011";
const sc_lv<12> rsaModExp::ap_const_lv12_FFF = "111111111111";

rsaModExp::rsaModExp(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_montMult_fu_143 = new montMult("grp_montMult_fu_143");
    grp_montMult_fu_143->ap_clk(ap_clk);
    grp_montMult_fu_143->ap_rst(ap_rst);
    grp_montMult_fu_143->ap_start(grp_montMult_fu_143_ap_start);
    grp_montMult_fu_143->ap_done(grp_montMult_fu_143_ap_done);
    grp_montMult_fu_143->ap_idle(grp_montMult_fu_143_ap_idle);
    grp_montMult_fu_143->ap_ready(grp_montMult_fu_143_ap_ready);
    grp_montMult_fu_143->X0_V(grp_montMult_fu_143_X0_V);
    grp_montMult_fu_143->Y0_V(grp_montMult_fu_143_Y0_V);
    grp_montMult_fu_143->M0_V(n_V);
    grp_montMult_fu_143->ap_return(grp_montMult_fu_143_ap_return);
    rsaModExp_add_205dEe_U7 = new rsaModExp_add_205dEe<1,4,2052,2052,2052>("rsaModExp_add_205dEe_U7");
    rsaModExp_add_205dEe_U7->clk(ap_clk);
    rsaModExp_add_205dEe_U7->reset(ap_rst);
    rsaModExp_add_205dEe_U7->din0(grp_fu_203_p0);
    rsaModExp_add_205dEe_U7->din1(tmp_i_5_reg_375);
    rsaModExp_add_205dEe_U7->ce(ap_var_for_const0);
    rsaModExp_add_205dEe_U7->dout(grp_fu_203_p2);
    rsaModExp_sub_205eOg_U8 = new rsaModExp_sub_205eOg<1,4,2052,2052,2052>("rsaModExp_sub_205eOg_U8");
    rsaModExp_sub_205eOg_U8->clk(ap_clk);
    rsaModExp_sub_205eOg_U8->reset(ap_rst);
    rsaModExp_sub_205eOg_U8->din0(P_V_2_reg_404);
    rsaModExp_sub_205eOg_U8->din1(tmp_i_reg_363);
    rsaModExp_sub_205eOg_U8->ce(ap_var_for_const0);
    rsaModExp_sub_205eOg_U8->dout(grp_fu_224_p2);
    rsaModExp_sub_205eOg_U9 = new rsaModExp_sub_205eOg<1,4,2052,2052,2052>("rsaModExp_sub_205eOg_U9");
    rsaModExp_sub_205eOg_U9->clk(ap_clk);
    rsaModExp_sub_205eOg_U9->reset(ap_rst);
    rsaModExp_sub_205eOg_U9->din0(p_036_1_P_V_2_i_reg_416);
    rsaModExp_sub_205eOg_U9->din1(tmp_i_reg_363);
    rsaModExp_sub_205eOg_U9->ce(ap_var_for_const0);
    rsaModExp_sub_205eOg_U9->dout(grp_fu_242_p2);
    rsaModExp_sub_205eOg_U10 = new rsaModExp_sub_205eOg<1,4,2052,2052,2052>("rsaModExp_sub_205eOg_U10");
    rsaModExp_sub_205eOg_U10->clk(ap_clk);
    rsaModExp_sub_205eOg_U10->reset(ap_rst);
    rsaModExp_sub_205eOg_U10->din0(grp_fu_284_p0);
    rsaModExp_sub_205eOg_U10->din1(tmp_i_reg_363);
    rsaModExp_sub_205eOg_U10->ce(ap_var_for_const0);
    rsaModExp_sub_205eOg_U10->dout(grp_fu_284_p2);
    rsaModExp_sub_205eOg_U11 = new rsaModExp_sub_205eOg<1,4,2052,2052,2052>("rsaModExp_sub_205eOg_U11");
    rsaModExp_sub_205eOg_U11->clk(ap_clk);
    rsaModExp_sub_205eOg_U11->reset(ap_rst);
    rsaModExp_sub_205eOg_U11->din0(p_036_1_P_V_2_i1_reg_460);
    rsaModExp_sub_205eOg_U11->din1(tmp_i_reg_363);
    rsaModExp_sub_205eOg_U11->ce(ap_var_for_const0);
    rsaModExp_sub_205eOg_U11->dout(grp_fu_314_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Mbar_V_fu_214_p1);
    sensitive << ( p_Val2_s_reg_87 );

    SC_METHOD(thread_P_V_2_fu_218_p3);
    sensitive << ( r_V_reg_383 );
    sensitive << ( tmp_3_reg_389 );
    sensitive << ( grp_fu_203_p2 );

    SC_METHOD(thread_P_V_5_fu_246_p3);
    sensitive << ( p_036_1_P_V_2_i_reg_416 );
    sensitive << ( tmp_5_i_reg_423 );
    sensitive << ( grp_fu_242_p2 );

    SC_METHOD(thread_P_V_6_fu_276_p3);
    sensitive << ( tmp_7_fu_272_p1 );
    sensitive << ( tmp_6_fu_264_p3 );

    SC_METHOD(thread_P_V_9_fu_322_p3);
    sensitive << ( p_036_1_P_V_2_i1_reg_460 );
    sensitive << ( tmp_5_i1_reg_467 );
    sensitive << ( grp_fu_314_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_montMult_fu_143_ap_done );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_montMult_fu_143_ap_done );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_grp_fu_203_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( p_Val2_s_reg_87 );

    SC_METHOD(thread_grp_fu_284_p0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_7_fu_272_p1 );
    sensitive << ( tmp_6_fu_264_p3 );

    SC_METHOD(thread_grp_montMult_fu_143_X0_V);
    sensitive << ( reg_163 );
    sensitive << ( Mbar_V_reg_399 );
    sensitive << ( tmp_9_reg_480 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_grp_montMult_fu_143_Y0_V);
    sensitive << ( reg_163 );
    sensitive << ( tmp_9_reg_480 );
    sensitive << ( xbar_V_2_reg_484 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_grp_montMult_fu_143_ap_start);
    sensitive << ( ap_reg_grp_montMult_fu_143_ap_start );

    SC_METHOD(thread_i_1_fu_208_p2);
    sensitive << ( i_assign_1_reg_98 );

    SC_METHOD(thread_i_2_fu_289_p2);
    sensitive << ( i_assign_2_reg_120 );

    SC_METHOD(thread_i_assign_1_cast_fu_177_p1);
    sensitive << ( i_assign_1_reg_98 );

    SC_METHOD(thread_i_assign_2_cast_fu_252_p1);
    sensitive << ( i_assign_2_reg_120 );

    SC_METHOD(thread_i_assign_cast_fu_328_p1);
    sensitive << ( i_assign_reg_131 );

    SC_METHOD(thread_i_fu_347_p2);
    sensitive << ( i_assign_reg_131 );

    SC_METHOD(thread_out_V);
    sensitive << ( grp_montMult_fu_143_ap_return );
    sensitive << ( grp_montMult_fu_143_ap_done );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_out_V_ap_vld);
    sensitive << ( grp_montMult_fu_143_ap_done );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_p_036_1_P_V_2_i1_fu_308_p3);
    sensitive << ( P_V_6_reg_436 );
    sensitive << ( tmp_4_i1_reg_455 );
    sensitive << ( grp_fu_284_p2 );

    SC_METHOD(thread_p_036_1_P_V_2_i_fu_232_p3);
    sensitive << ( P_V_2_reg_404 );
    sensitive << ( tmp_4_i_reg_411 );
    sensitive << ( grp_fu_224_p2 );

    SC_METHOD(thread_r_V_fu_189_p2);
    sensitive << ( p_Val2_s_reg_87 );

    SC_METHOD(thread_tmp_3_fu_195_p3);
    sensitive << ( i_assign_1_cast_fu_177_p1 );

    SC_METHOD(thread_tmp_4_fu_256_p3);
    sensitive << ( i_assign_2_reg_120 );

    SC_METHOD(thread_tmp_4_i1_fu_304_p2);
    sensitive << ( tmp_i_reg_363 );
    sensitive << ( P_V_6_reg_436 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_tmp_4_i_fu_228_p2);
    sensitive << ( tmp_i_reg_363 );
    sensitive << ( P_V_2_reg_404 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_tmp_5_i1_fu_318_p2);
    sensitive << ( tmp_i_reg_363 );
    sensitive << ( p_036_1_P_V_2_i1_reg_460 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_tmp_5_i_fu_238_p2);
    sensitive << ( tmp_i_reg_363 );
    sensitive << ( p_036_1_P_V_2_i_reg_416 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_tmp_6_fu_264_p3);
    sensitive << ( i_assign_2_cast_fu_252_p1 );

    SC_METHOD(thread_tmp_7_fu_272_p1);
    sensitive << ( p_Val2_1_reg_109 );

    SC_METHOD(thread_tmp_8_fu_332_p3);
    sensitive << ( i_assign_reg_131 );

    SC_METHOD(thread_tmp_9_fu_340_p3);
    sensitive << ( e_V );
    sensitive << ( i_assign_cast_fu_328_p1 );

    SC_METHOD(thread_tmp_fu_181_p3);
    sensitive << ( i_assign_1_reg_98 );

    SC_METHOD(thread_tmp_i_5_fu_173_p1);
    sensitive << ( M_V );

    SC_METHOD(thread_tmp_i_fu_169_p1);
    sensitive << ( n_V );

    SC_METHOD(thread_xbar_V_1_fu_295_p1);
    sensitive << ( p_Val2_1_reg_109 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_8_fu_332_p3 );
    sensitive << ( tmp_fu_181_p3 );
    sensitive << ( tmp_4_fu_256_p3 );
    sensitive << ( tmp_9_reg_480 );
    sensitive << ( grp_montMult_fu_143_ap_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000001";
    ap_reg_grp_montMult_fu_143_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "rsaModExp_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, M_V, "(port)M_V");
    sc_trace(mVcdFile, e_V, "(port)e_V");
    sc_trace(mVcdFile, n_V, "(port)n_V");
    sc_trace(mVcdFile, out_V, "(port)out_V");
    sc_trace(mVcdFile, out_V_ap_vld, "(port)out_V_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_163, "reg_163");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, tmp_8_fu_332_p3, "tmp_8_fu_332_p3");
    sc_trace(mVcdFile, tmp_i_fu_169_p1, "tmp_i_fu_169_p1");
    sc_trace(mVcdFile, tmp_i_reg_363, "tmp_i_reg_363");
    sc_trace(mVcdFile, tmp_i_5_fu_173_p1, "tmp_i_5_fu_173_p1");
    sc_trace(mVcdFile, tmp_i_5_reg_375, "tmp_i_5_reg_375");
    sc_trace(mVcdFile, r_V_fu_189_p2, "r_V_fu_189_p2");
    sc_trace(mVcdFile, r_V_reg_383, "r_V_reg_383");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_181_p3, "tmp_fu_181_p3");
    sc_trace(mVcdFile, tmp_3_fu_195_p3, "tmp_3_fu_195_p3");
    sc_trace(mVcdFile, tmp_3_reg_389, "tmp_3_reg_389");
    sc_trace(mVcdFile, i_1_fu_208_p2, "i_1_fu_208_p2");
    sc_trace(mVcdFile, i_1_reg_394, "i_1_reg_394");
    sc_trace(mVcdFile, Mbar_V_fu_214_p1, "Mbar_V_fu_214_p1");
    sc_trace(mVcdFile, Mbar_V_reg_399, "Mbar_V_reg_399");
    sc_trace(mVcdFile, P_V_2_fu_218_p3, "P_V_2_fu_218_p3");
    sc_trace(mVcdFile, P_V_2_reg_404, "P_V_2_reg_404");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_4_i_fu_228_p2, "tmp_4_i_fu_228_p2");
    sc_trace(mVcdFile, tmp_4_i_reg_411, "tmp_4_i_reg_411");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, p_036_1_P_V_2_i_fu_232_p3, "p_036_1_P_V_2_i_fu_232_p3");
    sc_trace(mVcdFile, p_036_1_P_V_2_i_reg_416, "p_036_1_P_V_2_i_reg_416");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_5_i_fu_238_p2, "tmp_5_i_fu_238_p2");
    sc_trace(mVcdFile, tmp_5_i_reg_423, "tmp_5_i_reg_423");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, P_V_5_fu_246_p3, "P_V_5_fu_246_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, P_V_6_fu_276_p3, "P_V_6_fu_276_p3");
    sc_trace(mVcdFile, P_V_6_reg_436, "P_V_6_reg_436");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_4_fu_256_p3, "tmp_4_fu_256_p3");
    sc_trace(mVcdFile, i_2_fu_289_p2, "i_2_fu_289_p2");
    sc_trace(mVcdFile, i_2_reg_443, "i_2_reg_443");
    sc_trace(mVcdFile, tmp_4_i1_fu_304_p2, "tmp_4_i1_fu_304_p2");
    sc_trace(mVcdFile, tmp_4_i1_reg_455, "tmp_4_i1_reg_455");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, p_036_1_P_V_2_i1_fu_308_p3, "p_036_1_P_V_2_i1_fu_308_p3");
    sc_trace(mVcdFile, p_036_1_P_V_2_i1_reg_460, "p_036_1_P_V_2_i1_reg_460");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_5_i1_fu_318_p2, "tmp_5_i1_fu_318_p2");
    sc_trace(mVcdFile, tmp_5_i1_reg_467, "tmp_5_i1_reg_467");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, P_V_9_fu_322_p3, "P_V_9_fu_322_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, tmp_9_fu_340_p3, "tmp_9_fu_340_p3");
    sc_trace(mVcdFile, tmp_9_reg_480, "tmp_9_reg_480");
    sc_trace(mVcdFile, grp_montMult_fu_143_ap_return, "grp_montMult_fu_143_ap_return");
    sc_trace(mVcdFile, xbar_V_2_reg_484, "xbar_V_2_reg_484");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, grp_montMult_fu_143_ap_done, "grp_montMult_fu_143_ap_done");
    sc_trace(mVcdFile, i_fu_347_p2, "i_fu_347_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, grp_montMult_fu_143_ap_start, "grp_montMult_fu_143_ap_start");
    sc_trace(mVcdFile, grp_montMult_fu_143_ap_idle, "grp_montMult_fu_143_ap_idle");
    sc_trace(mVcdFile, grp_montMult_fu_143_ap_ready, "grp_montMult_fu_143_ap_ready");
    sc_trace(mVcdFile, grp_montMult_fu_143_X0_V, "grp_montMult_fu_143_X0_V");
    sc_trace(mVcdFile, grp_montMult_fu_143_Y0_V, "grp_montMult_fu_143_Y0_V");
    sc_trace(mVcdFile, p_Val2_s_reg_87, "p_Val2_s_reg_87");
    sc_trace(mVcdFile, i_assign_1_reg_98, "i_assign_1_reg_98");
    sc_trace(mVcdFile, p_Val2_1_reg_109, "p_Val2_1_reg_109");
    sc_trace(mVcdFile, i_assign_2_reg_120, "i_assign_2_reg_120");
    sc_trace(mVcdFile, i_assign_reg_131, "i_assign_reg_131");
    sc_trace(mVcdFile, ap_reg_grp_montMult_fu_143_ap_start, "ap_reg_grp_montMult_fu_143_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, xbar_V_fu_58, "xbar_V_fu_58");
    sc_trace(mVcdFile, xbar_V_1_fu_295_p1, "xbar_V_1_fu_295_p1");
    sc_trace(mVcdFile, i_assign_1_cast_fu_177_p1, "i_assign_1_cast_fu_177_p1");
    sc_trace(mVcdFile, grp_fu_203_p0, "grp_fu_203_p0");
    sc_trace(mVcdFile, grp_fu_203_p2, "grp_fu_203_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_224_p2, "grp_fu_224_p2");
    sc_trace(mVcdFile, grp_fu_242_p2, "grp_fu_242_p2");
    sc_trace(mVcdFile, i_assign_2_cast_fu_252_p1, "i_assign_2_cast_fu_252_p1");
    sc_trace(mVcdFile, tmp_7_fu_272_p1, "tmp_7_fu_272_p1");
    sc_trace(mVcdFile, tmp_6_fu_264_p3, "tmp_6_fu_264_p3");
    sc_trace(mVcdFile, grp_fu_284_p0, "grp_fu_284_p0");
    sc_trace(mVcdFile, grp_fu_284_p2, "grp_fu_284_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, grp_fu_314_p2, "grp_fu_314_p2");
    sc_trace(mVcdFile, i_assign_cast_fu_328_p1, "i_assign_cast_fu_328_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("rsaModExp.hdltvin.dat");
    mHdltvoutHandle.open("rsaModExp.hdltvout.dat");
}

rsaModExp::~rsaModExp() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_montMult_fu_143;
    delete rsaModExp_add_205dEe_U7;
    delete rsaModExp_sub_205eOg_U8;
    delete rsaModExp_sub_205eOg_U9;
    delete rsaModExp_sub_205eOg_U10;
    delete rsaModExp_sub_205eOg_U11;
}

void rsaModExp::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void rsaModExp::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_montMult_fu_143_ap_start = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()) && 
              esl_seteq<1,1,1>(tmp_8_fu_332_p3.read(), ap_const_lv1_0)) || 
             (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()) && 
              !esl_seteq<1,1,1>(tmp_8_fu_332_p3.read(), ap_const_lv1_0)) || 
             (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()) && 
              !esl_seteq<1,1,1>(ap_const_logic_0, grp_montMult_fu_143_ap_done.read()) && 
              !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_480.read())))) {
            ap_reg_grp_montMult_fu_143_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_montMult_fu_143_ap_ready.read())) {
            ap_reg_grp_montMult_fu_143_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        i_assign_1_reg_98 = i_1_reg_394.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_assign_1_reg_98 = ap_const_lv13_800;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()))) {
        i_assign_2_reg_120 = i_2_reg_443.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_181_p3.read()))) {
        i_assign_2_reg_120 = ap_const_lv13_800;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, grp_montMult_fu_143_ap_done.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_480.read())))) {
        i_assign_reg_131 = i_fu_347_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_256_p3.read()))) {
        i_assign_reg_131 = ap_const_lv12_7FF;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()))) {
        p_Val2_1_reg_109 = P_V_9_fu_322_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_181_p3.read()))) {
        p_Val2_1_reg_109 = ap_const_lv2052_lc_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        p_Val2_s_reg_87 = P_V_5_fu_246_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        p_Val2_s_reg_87 = ap_const_lv2052_lc_1;
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()) && 
          !esl_seteq<1,1,1>(ap_const_logic_0, grp_montMult_fu_143_ap_done.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_480.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_480.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, grp_montMult_fu_143_ap_done.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_480.read()))))) {
        xbar_V_fu_58 = grp_montMult_fu_143_ap_return.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_256_p3.read()))) {
        xbar_V_fu_58 = xbar_V_1_fu_295_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_181_p3.read()))) {
        Mbar_V_reg_399 = Mbar_V_fu_214_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        P_V_2_reg_404 = P_V_2_fu_218_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_256_p3.read()))) {
        P_V_6_reg_436 = P_V_6_fu_276_p3.read();
        i_2_reg_443 = i_2_fu_289_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_181_p3.read()))) {
        i_1_reg_394 = i_1_fu_208_p2.read();
        r_V_reg_383 = r_V_fu_189_p2.read();
        tmp_3_reg_389 = tmp_3_fu_195_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()))) {
        p_036_1_P_V_2_i1_reg_460 = p_036_1_P_V_2_i1_fu_308_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        p_036_1_P_V_2_i_reg_416 = p_036_1_P_V_2_i_fu_232_p3.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()) && 
  esl_seteq<1,1,1>(tmp_8_fu_332_p3.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()) && 
  !esl_seteq<1,1,1>(tmp_8_fu_332_p3.read(), ap_const_lv1_0)))) {
        reg_163 = xbar_V_fu_58.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        tmp_4_i1_reg_455 = tmp_4_i1_fu_304_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        tmp_4_i_reg_411 = tmp_4_i_fu_228_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read()))) {
        tmp_5_i1_reg_467 = tmp_5_i1_fu_318_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        tmp_5_i_reg_423 = tmp_5_i_fu_238_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(tmp_8_fu_332_p3.read(), ap_const_lv1_0))) {
        tmp_9_reg_480 = tmp_9_fu_340_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_i_5_reg_375 = tmp_i_5_fu_173_p1.read();
        tmp_i_reg_363 = tmp_i_fu_169_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()) && !esl_seteq<1,1,1>(ap_const_logic_0, grp_montMult_fu_143_ap_done.read()))) {
        xbar_V_2_reg_484 = grp_montMult_fu_143_ap_return.read();
    }
}

void rsaModExp::thread_Mbar_V_fu_214_p1() {
    Mbar_V_fu_214_p1 = p_Val2_s_reg_87.read().range(2048-1, 0);
}

void rsaModExp::thread_P_V_2_fu_218_p3() {
    P_V_2_fu_218_p3 = (!tmp_3_reg_389.read()[0].is_01())? sc_lv<2052>(): ((tmp_3_reg_389.read()[0].to_bool())? grp_fu_203_p2.read(): r_V_reg_383.read());
}

void rsaModExp::thread_P_V_5_fu_246_p3() {
    P_V_5_fu_246_p3 = (!tmp_5_i_reg_423.read()[0].is_01())? sc_lv<2052>(): ((tmp_5_i_reg_423.read()[0].to_bool())? p_036_1_P_V_2_i_reg_416.read(): grp_fu_242_p2.read());
}

void rsaModExp::thread_P_V_6_fu_276_p3() {
    P_V_6_fu_276_p3 = esl_concat<2051,1>(tmp_7_fu_272_p1.read(), tmp_6_fu_264_p3.read());
}

void rsaModExp::thread_P_V_9_fu_322_p3() {
    P_V_9_fu_322_p3 = (!tmp_5_i1_reg_467.read()[0].is_01())? sc_lv<2052>(): ((tmp_5_i1_reg_467.read()[0].to_bool())? p_036_1_P_V_2_i1_reg_460.read(): grp_fu_314_p2.read());
}

void rsaModExp::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void rsaModExp::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(9, 9);
}

void rsaModExp::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read().range(12, 12);
}

void rsaModExp::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read().range(13, 13);
}

void rsaModExp::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read().range(15, 15);
}

void rsaModExp::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read().range(16, 16);
}

void rsaModExp::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read().range(17, 17);
}

void rsaModExp::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void rsaModExp::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read().range(19, 19);
}

void rsaModExp::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read().range(20, 20);
}

void rsaModExp::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read().range(21, 21);
}

void rsaModExp::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read().range(22, 22);
}

void rsaModExp::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read().range(23, 23);
}

void rsaModExp::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read().range(24, 24);
}

void rsaModExp::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void rsaModExp::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void rsaModExp::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read().range(7, 7);
}

void rsaModExp::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(8, 8);
}

void rsaModExp::thread_ap_done() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_0, grp_montMult_fu_143_ap_done.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void rsaModExp::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void rsaModExp::thread_ap_ready() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_0, grp_montMult_fu_143_ap_done.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void rsaModExp::thread_grp_fu_203_p0() {
    grp_fu_203_p0 = (!ap_const_lv2052_lc_2.is_01())? sc_lv<2052>(): p_Val2_s_reg_87.read() << (unsigned short)ap_const_lv2052_lc_2.to_uint();
}

void rsaModExp::thread_grp_fu_284_p0() {
    grp_fu_284_p0 = esl_concat<2051,1>(tmp_7_fu_272_p1.read(), tmp_6_fu_264_p3.read());
}

void rsaModExp::thread_grp_montMult_fu_143_X0_V() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_480.read()))) {
        grp_montMult_fu_143_X0_V = Mbar_V_reg_399.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read())))) {
        grp_montMult_fu_143_X0_V = reg_163.read();
    } else {
        grp_montMult_fu
    }
}

void rsaModExp::thread_grp_montMult_fu_143_Y0_V() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_480.read()))) {
        grp_montMult_fu_143_Y0_V = xbar_V_2_reg_484.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()))) {
        grp_montMult_fu_143_Y0_V = ap_const_lv2048_lc_2;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        grp_montMult_fu_143_Y0_V = reg_163.read();
    } else {
        grp_montMult_fu
    }
}

void rsaModExp::thread_grp_montMult_fu_143_ap_start() {
    grp_montMult_fu_143_ap_start = ap_reg_grp_montMult_fu_143_ap_start.read();
}

void rsaModExp::thread_i_1_fu_208_p2() {
    i_1_fu_208_p2 = (!ap_const_lv13_1FFF.is_01() || !i_assign_1_reg_98.read().is_01())? sc_lv<13>(): (sc_bigint<13>(ap_const_lv13_1FFF) + sc_biguint<13>(i_assign_1_reg_98.read()));
}

void rsaModExp::thread_i_2_fu_289_p2() {
    i_2_fu_289_p2 = (!ap_const_lv13_1FFF.is_01() || !i_assign_2_reg_120.read().is_01())? sc_lv<13>(): (sc_bigint<13>(ap_const_lv13_1FFF) + sc_biguint<13>(i_assign_2_reg_120.read()));
}

void rsaModExp::thread_i_assign_1_cast_fu_177_p1() {
    i_assign_1_cast_fu_177_p1 = esl_sext<32,13>(i_assign_1_reg_98.read());
}

void rsaModExp::thread_i_assign_2_cast_fu_252_p1() {
    i_assign_2_cast_fu_252_p1 = esl_sext<32,13>(i_assign_2_reg_120.read());
}

void rsaModExp::thread_i_assign_cast_fu_328_p1() {
    i_assign_cast_fu_328_p1 = esl_sext<32,12>(i_assign_reg_131.read());
}

void rsaModExp::thread_i_fu_347_p2() {
    i_fu_347_p2 = (!i_assign_reg_131.read().is_01() || !ap_const_lv12_FFF.is_01())? sc_lv<12>(): (sc_biguint<12>(i_assign_reg_131.read()) + sc_bigint<12>(ap_const_lv12_FFF));
}

void rsaModExp::thread_out_V() {
    out_V = grp_montMult_fu_143_ap_return.read();
}

void rsaModExp::thread_out_V_ap_vld() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_0, grp_montMult_fu_143_ap_done.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()))) {
        out_V_ap_vld = ap_const_logic_1;
    } else {
        out_V_ap_vld = ap_const_logic_0;
    }
}

void rsaModExp::thread_p_036_1_P_V_2_i1_fu_308_p3() {
    p_036_1_P_V_2_i1_fu_308_p3 = (!tmp_4_i1_reg_455.read()[0].is_01())? sc_lv<2052>(): ((tmp_4_i1_reg_455.read()[0].to_bool())? P_V_6_reg_436.read(): grp_fu_284_p2.read());
}

void rsaModExp::thread_p_036_1_P_V_2_i_fu_232_p3() {
    p_036_1_P_V_2_i_fu_232_p3 = (!tmp_4_i_reg_411.read()[0].is_01())? sc_lv<2052>(): ((tmp_4_i_reg_411.read()[0].to_bool())? P_V_2_reg_404.read(): grp_fu_224_p2.read());
}

void rsaModExp::thread_r_V_fu_189_p2() {
    r_V_fu_189_p2 = (!ap_const_lv2052_lc_2.is_01())? sc_lv<2052>(): p_Val2_s_reg_87.read() << (unsigned short)ap_const_lv2052_lc_2.to_uint();
}

void rsaModExp::thread_tmp_3_fu_195_p3() {
    tmp_3_fu_195_p3 = (!i_assign_1_cast_fu_177_p1.read().is_01() || sc_biguint<32>(i_assign_1_cast_fu_177_p1.read()).to_uint() >= 2049)? sc_lv<1>(): ap_const_lv2049_lc_3.range(sc_biguint<32>(i_assign_1_cast_fu_177_p1.read()).to_uint(), sc_biguint<32>(i_assign_1_cast_fu_177_p1.read()).to_uint());
}

void rsaModExp::thread_tmp_4_fu_256_p3() {
    tmp_4_fu_256_p3 = i_assign_2_reg_120.read().range(12, 12);
}

void rsaModExp::thread_tmp_4_i1_fu_304_p2() {
    tmp_4_i1_fu_304_p2 = (!P_V_6_reg_436.read().is_01() || !tmp_i_reg_363.read().is_01())? sc_lv<1>(): (sc_biguint<2052>(P_V_6_reg_436.read()) < sc_biguint<2052>(tmp_i_reg_363.read()));
}

void rsaModExp::thread_tmp_4_i_fu_228_p2() {
    tmp_4_i_fu_228_p2 = (!P_V_2_reg_404.read().is_01() || !tmp_i_reg_363.read().is_01())? sc_lv<1>(): (sc_biguint<2052>(P_V_2_reg_404.read()) < sc_biguint<2052>(tmp_i_reg_363.read()));
}

void rsaModExp::thread_tmp_5_i1_fu_318_p2() {
    tmp_5_i1_fu_318_p2 = (!p_036_1_P_V_2_i1_reg_460.read().is_01() || !tmp_i_reg_363.read().is_01())? sc_lv<1>(): (sc_biguint<2052>(p_036_1_P_V_2_i1_reg_460.read()) < sc_biguint<2052>(tmp_i_reg_363.read()));
}

void rsaModExp::thread_tmp_5_i_fu_238_p2() {
    tmp_5_i_fu_238_p2 = (!p_036_1_P_V_2_i_reg_416.read().is_01() || !tmp_i_reg_363.read().is_01())? sc_lv<1>(): (sc_biguint<2052>(p_036_1_P_V_2_i_reg_416.read()) < sc_biguint<2052>(tmp_i_reg_363.read()));
}

void rsaModExp::thread_tmp_6_fu_264_p3() {
    tmp_6_fu_264_p3 = (!i_assign_2_cast_fu_252_p1.read().is_01() || sc_biguint<32>(i_assign_2_cast_fu_252_p1.read()).to_uint() >= 2049)? sc_lv<1>(): ap_const_lv2049_lc_3.range(sc_biguint<32>(i_assign_2_cast_fu_252_p1.read()).to_uint(), sc_biguint<32>(i_assign_2_cast_fu_252_p1.read()).to_uint());
}

void rsaModExp::thread_tmp_7_fu_272_p1() {
    tmp_7_fu_272_p1 = p_Val2_1_reg_109.read().range(2051-1, 0);
}

void rsaModExp::thread_tmp_8_fu_332_p3() {
    tmp_8_fu_332_p3 = i_assign_reg_131.read().range(11, 11);
}

void rsaModExp::thread_tmp_9_fu_340_p3() {
    tmp_9_fu_340_p3 = (!i_assign_cast_fu_328_p1.read().is_01() || sc_biguint<32>(i_assign_cast_fu_328_p1.read()).to_uint() >= 2048)? sc_lv<1>(): e_V.read().range(sc_biguint<32>(i_assign_cast_fu_328_p1.read()).to_uint(), sc_biguint<32>(i_assign_cast_fu_328_p1.read()).to_uint());
}

void rsaModExp::thread_tmp_fu_181_p3() {
    tmp_fu_181_p3 = i_assign_1_reg_98.read().range(12, 12);
}

void rsaModExp::thread_tmp_i_5_fu_173_p1() {
    tmp_i_5_fu_173_p1 = esl_zext<2052,2048>(M_V.read());
}

void rsaModExp::thread_tmp_i_fu_169_p1() {
    tmp_i_fu_169_p1 = esl_zext<2052,2048>(n_V.read());
}

void rsaModExp::thread_xbar_V_1_fu_295_p1() {
    xbar_V_1_fu_295_p1 = p_Val2_1_reg_109.read().range(2048-1, 0);
}

void rsaModExp::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_181_p3.read())) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8192 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_256_p3.read())) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 2097152 : 
            if (!esl_seteq<1,1,1>(tmp_8_fu_332_p3.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 4194304 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_montMult_fu_143_ap_done.read())) {
                ap_NS_fsm = ap_ST_fsm_state24;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 8388608 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_0, grp_montMult_fu_143_ap_done.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_480.read()))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 16777216 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_montMult_fu_143_ap_done.read())) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<25>) ("XXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void rsaModExp::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"M_V\" :  \"" << M_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"e_V\" :  \"" << e_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"n_V\" :  \"" << n_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V\" :  \"" << out_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_ap_vld\" :  \"" << out_V_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

